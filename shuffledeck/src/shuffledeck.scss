@import "../../custommixins";

$oldSlide: "[leaving]";
$newSlide: "[selected]";

$beforeAnimation: "[before-animation]";
$afterAnimation: ":not(#{$beforeAnimation})";

$oldStartingSelector: "#{$oldSlide}#{$beforeAnimation}";
$newStartingSelector: "#{$newSlide}#{$beforeAnimation}";
$oldEndingSelector: "#{$oldSlide}#{$afterAnimation}";
$newEndingSelector: "#{$newSlide}#{$afterAnimation}";

$oldSlideZIndex: 1;
$newSlideZIndex: 2;

@mixin defaultSlideOrder(){
    &#{$newSlide}{
        z-index: $newSlideZIndex;
    }
    
    &#{$oldSlide}{
        z-index: $oldSlideZIndex;
    }
}

@mixin swappedSlideOrder(){
    &#{$newSlide}{
        z-index: $oldSlideZIndex;
    }
    
    &#{$oldSlide}{
        z-index: $newSlideZIndex;
    }
}

@mixin defaultTransform(){
    @include transformed(translate3d(0%,0%,1px));
}

x-shuffledeck{
    display: block; //can be overridden with anything non-inline
    position: relative;
    overflow: hidden;
    
    & > x-shuffleslide{
        @include boxSizing(border-box);
        display: block;
        
        overflow: hidden;
        position: absolute;
        
        @include animated(transform, 0.5s, ease, 0s);
        @include backfaceVisibility(hidden);
        @include defaultTransform;
        
        height: 100%;
        width: 100%;
        
        left: 0px;
        right: 0px;
        
        z-index: 0;
        
        @include defaultSlideOrder;
        
        &:not(#{$newSlide}):not(#{$oldSlide}){
            visibility: hidden; // note: do not use display: none here!
            opacity: 0;
        }
        
        /** slide animation types go here **/
        
        // default animation: jump from one spot to another
        &[slide-anim-type]{ 
            // initial positions for animation
            &#{$oldStartingSelector}{
                @include defaultTransform;
            }
            
            &#{$newStartingSelector}{
                @include defaultTransform;
            }
            
            // target positions for animation
            &#{$oldEndingSelector}{
                @include defaultTransform;
            }
            
            &#{$newEndingSelector}{
                @include defaultTransform;
            }
        }
        
        // new slide scrolls from right to left 
        &[slide-anim-type=scrollLeft]{ 
            &:not([reverse]){
                // initial positions for animation
                &#{$newStartingSelector}{
                    @include transformed(translateX(100%));
                }
                
                // target positions for animation
                &#{$oldEndingSelector}{
                    @include transformed(translateX(-100%));
                }
            }
            
            // animation for reverse direction
            &[reverse]{
                &#{$newStartingSelector}{
                    @include transformed(translateX(-100%));
                }
                
                &#{$oldEndingSelector}{
                    @include transformed(translateX(100%));
                }
            }
        }
        
        // new slide scrolls from left to right 
        &[slide-anim-type=scrollRight]{
            &:not([reverse]){
                // initial positions for animation
                &#{$newStartingSelector}{
                    @include transformed(translateX(-100%));
                }
                
                // target positions for animation
                &#{$oldEndingSelector}{
                    @include transformed(translateX(100%));
                }
            }
            
            // animation for reverse direction
            &[reverse]{
                &#{$newStartingSelector}{
                    @include transformed(translateX(100%));
                }
                &#{$oldEndingSelector}{
                    @include transformed(translateX(-100%));
                }
            }
        }
        
        // new slide scrolls from bottom to top 
        &[slide-anim-type=scrollUp]{
            &:not([reverse]){
                // initial positions for animation
                &#{$newStartingSelector}{
                    @include transformed(translateY(100%));
                }
                
                // target positions for animation
                &#{$oldEndingSelector}{
                    @include transformed(translateY(-100%));
                }
            }
            
            // animation for reverse direction
            &[reverse]{
                &#{$newStartingSelector}{
                    @include transformed(translateY(-100%));
                }
                &#{$oldEndingSelector}{
                    @include transformed(translateY(100%));
                }
            }
        }
        
        // new slide scrolls from top to bottom 
        &[slide-anim-type=scrollDown]{
            &:not([reverse]){
                // initial positions for animation
                &#{$newStartingSelector}{
                    @include transformed(translateY(-100%));
                }
                
                // target positions for animation
                &#{$oldEndingSelector}{
                    @include transformed(translateY(100%));
                }
            }
            
            // animation for reverse direction
            &[reverse]{
                &#{$newStartingSelector}{
                    @include transformed(translateY(100%));
                }
                &#{$oldEndingSelector}{
                    @include transformed(translateY(-100%));
                }
            }
        }
        
        &[slide-anim-type=flipX]{
            // initial positions for animation
            &#{$newStartingSelector}{
                @include transformed(rotateX(180deg));
            }
            
            // target positions for animation
            &#{$oldEndingSelector}{
                @include transformed(rotateX(-180deg));
            }
        }
        
        &[slide-anim-type=flipY]{
            // initial positions for animation
            &#{$newStartingSelector}{
                @include transformed(rotateY(180deg));
            }
            
            // target positions for animation
            &#{$oldEndingSelector}{
                @include transformed(rotateY(-180deg));
            }
        }
        
        &[slide-anim-type=coverLeft]{
            &:not([reverse]){
                // initial positions for animation
                &#{$newStartingSelector}{
                    @include transformed(translateX(100%));
                }
            }
            
            &[reverse]{
                @include swappedSlideOrder;
                
                &#{$oldEndingSelector}{
                    @include transformed(translateX(100%));
                }
            }
        }
        
        &[slide-anim-type=coverRight]{
            &:not([reverse]){
                // initial positions for animation
                &#{$newStartingSelector}{
                    @include transformed(translateX(-100%));
                }
            }
            
            &[reverse]{
                @include swappedSlideOrder;
                
                &#{$oldEndingSelector}{
                    @include transformed(translateX(-100%));
                }
            }
        }
        
        &[slide-anim-type=coverUp]{
            &:not([reverse]){
                // initial positions for animation
                &#{$newStartingSelector}{
                    @include transformed(translateY(100%));
                }
            }
            
            &[reverse]{
                @include swappedSlideOrder;
                
                &#{$oldEndingSelector}{
                    @include transformed(translateY(100%));
                }
            }
        }
        
        &[slide-anim-type=coverDown]{
            &:not([reverse]){
                // initial positions for animation
                &#{$newStartingSelector}{
                    @include transformed(translateY(-100%));
                }
            }
            
            &[reverse]{
                @include swappedSlideOrder;
            
                &#{$oldEndingSelector}{
                    @include transformed(translateY(-100%));
                }
            }
        }
        
        &[slide-anim-type=uncoverLeft]{
            &:not([reverse]){
                @include swappedSlideOrder;
            
                &#{$oldEndingSelector}{
                    @include transformed(translateX(-100%));
                }
            }
            
            &[reverse]{
                &#{$newStartingSelector}{
                    @include transformed(translateX(-100%));
                }
            }
        }
        
        &[slide-anim-type=uncoverRight]{
            &:not([reverse]){
                @include swappedSlideOrder;
                
                &#{$oldEndingSelector}{
                    @include transformed(translateX(100%));
                }
            }
            
            &[reverse]{
                &#{$newStartingSelector}{
                    @include transformed(translateX(100%));
                }
            }
        }
        
        &[slide-anim-type=uncoverUp]{
            &:not([reverse]){
                @include swappedSlideOrder;
                
                &#{$oldEndingSelector}{
                    @include transformed(translateY(-100%));
                }
            }
            
            &[reverse]{
                &#{$newStartingSelector}{
                    @include transformed(translateY(-100%));
                }
            }
        }
        
        &[slide-anim-type=uncoverDown]{
            &:not([reverse]){
                @include swappedSlideOrder;
                
                &#{$oldEndingSelector}{
                    @include transformed(translateY(100%));
                }
            }
            &[reverse]{
                &#{$newStartingSelector}{
                    @include transformed(translateY(100%));
                }
            }
        }
    }
}
